{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/hooks/useSiteMetadata.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/MenuButton.js","webpack:///./src/components/Header.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./src/components/SEO.js"],"names":["__webpack_exports__","_ref","data","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","pages","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","_components_SEO__WEBPACK_IMPORTED_MODULE_4__","pagePath","location","pathname","pageTitle","_components_layout__WEBPACK_IMPORTED_MODULE_3__","map","_ref2","page","node","key","fields","slug","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","frontmatter","title","pageQuery","m","module","exports","require","default","_public_static_d_2635859905_json__WEBPACK_IMPORTED_MODULE_0__","site","siteMetadata","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","MenuButtonBar","styled","span","withConfig","displayName","componentId","color","MenuButton","button","size","options","Typography","judahTheme","MenuLink","Link","headerFontFamily","join","MenuItem","memo","path","react_default","MobileMenuNav","nav","open","MobileMenu","menu","menuItem","DesktopMenuNav","DesktopMenu","_ref3","Header","header","HeaderContainer","div","HeaderTitle","h1","MobileMenuButton","className","onChange","_useState","useState","setOpen","onClick","components_Header","mobileMenuOpen","setMobileMenuOpen","useSiteMetadata","headerColor","gatsby_browser_entry","style","Header_DesktopMenu","Header_MobileMenu","Container","main","children","react_helmet__WEBPACK_IMPORTED_MODULE_1__","_hooks_useSiteMetadata__WEBPACK_IMPORTED_MODULE_2__","pageDescription","metadata","canonicalUrl","siteUrl","description","websiteJsonLd","@context","@type","inLanguage","name","url","webpageJsonLd","lang","prefix","property","content","rel","href","type","JSON","stringify"],"mappings":"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","file":"component---src-pages-projects-js-bcec832c7a315a56cb4c.js","sourcesContent":["import React from \"react\";\n\nimport { Link, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/SEO\";\n\nexport default ({ data, ...props }) => {\n  const pages = data.allMarkdownRemark.edges;\n\n  return (\n    <>\n      <SEO pagePath={props.location.pathname} pageTitle=\"Projects\" />\n      <Layout>\n        <h1>Projects</h1>\n        <ul>\n          {pages.map(({ node: page }) => (\n            <li key={page.fields.slug}>\n              <Link to={page.fields.slug}>{page.frontmatter.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </Layout>\n    </>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { fields: { slug: { regex: \"/projects/\" } } }\n      sort: { fields: frontmatter___order, order: ASC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n          excerpt(pruneLength: 150, format: PLAIN)\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { useStaticQuery, graphql } from \"gatsby\";\n\nexport default () => {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          siteUrl\n          title\n          description\n          headerColor\n          menu {\n            path\n            title\n          }\n        }\n      }\n    }\n  `);\n\n  return site.siteMetadata;\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst MenuButtonBar = styled.span`\n  display: block;\n  background-color: ${props => props.color || \"white\"};\n  border-radius: 3px;\n  height: 5px;\n`;\n\nconst MenuButton = styled.button`\n  width: ${props => props.size};\n  height: ${props => props.size};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: stretch;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n  padding 0\n`;\n\nexport default ({ className, color, size, onChange }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <MenuButton\n      className={className}\n      size={size}\n      onClick={() => {\n        onChange(!open);\n        setOpen(!open);\n      }}\n    >\n      <MenuButtonBar color={color} />\n      <MenuButtonBar color={color} />\n      <MenuButtonBar color={color} />\n    </MenuButton>\n  );\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nimport MenuButton from \"./MenuButton\";\n\nimport useSiteMetadata from \"../hooks/useSiteMetadata\";\n\nimport typography from \"../utils/typography\";\n\nconst { options } = typography;\n\nconst MenuLink = styled(Link)`\n  display: inline-block;\n  color: white;\n  font-weight: bold;\n  font-family: ${options.headerFontFamily.join()};\n  margin: 0 0.5rem;\n  transition: all 0.3s ease-in-out 0s;\n\n  &:hover {\n    color: white;\n    text-decoration: underline;\n  }\n\n  @media (min-width: 800px) {\n    &:hover {\n      text-decoration: none;\n      transform: rotate(10deg);\n    }\n  }\n`;\n\nconst MenuItem = React.memo(({ title, path }) => (\n  <MenuLink to={path}>{title}</MenuLink>\n));\n\nconst MobileMenuNav = styled.nav`\n  display: ${props => (props.open ? \"flex\" : \"none\")};\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n\n  @media (min-width: 800px) {\n    display: none;\n  }\n`;\n\nconst MobileMenu = ({ menu, open }) => (\n  <MobileMenuNav open={open}>\n    {menu.map(menuItem => (\n      <MenuItem\n        key={menuItem.path}\n        path={menuItem.path}\n        title={menuItem.title}\n      />\n    ))}\n  </MobileMenuNav>\n);\n\nconst DesktopMenuNav = styled.nav`\n  display: none;\n\n  @media (min-width: 800px) {\n    display: inline;\n  }\n`;\n\nconst DesktopMenu = ({ menu }) => (\n  <DesktopMenuNav>\n    {menu.map(menuItem => (\n      <MenuItem\n        key={menuItem.path}\n        path={menuItem.path}\n        title={menuItem.title}\n      />\n    ))}\n  </DesktopMenuNav>\n);\n\nconst Header = styled.header`\n  background-color: ${props => props.color};\n  width: 100%;\n  padding: 1rem 1rem;\n  margin-bottom: 1rem;\n  box-shadow: 0 1px 4px 4px gray;\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 100%;\n  margin: 0 auto;\n\n  @media (min-width: 800px) {\n    max-width: 1350px;\n  }\n`;\n\nconst HeaderTitle = styled.h1`\n  display: inline;\n  flex-grow: 1;\n  margin: 0;\n`;\n\nconst MobileMenuButton = styled(MenuButton)`\n  @media (min-width: 800px) {\n    display: none;\n  }\n`;\n\nexport default () => {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const siteMetadata = useSiteMetadata();\n\n  return (\n    <Header color={siteMetadata.headerColor}>\n      <HeaderContainer>\n        <HeaderTitle>\n          <Link to=\"/\" style={{ color: \"white\" }}>\n            {siteMetadata.title}\n          </Link>\n        </HeaderTitle>\n        <DesktopMenu menu={siteMetadata.menu} />\n        <MobileMenuButton size=\"50px\" onChange={setMobileMenuOpen} />\n      </HeaderContainer>\n      <MobileMenu menu={siteMetadata.menu} open={mobileMenuOpen} />\n    </Header>\n  );\n};\n","import Typography from \"typography\";\nimport judahTheme from \"typography-theme-judah\";\n\nconst typography = new Typography(judahTheme);\n\nexport default typography;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Header from \"./Header\";\n\nconst Container = styled.main`\n  margin: 0 auto;\n  max-width: 1000px;\n  padding: 0 2rem;\n`;\n\nexport default ({ children }) => (\n  <>\n    <Header />\n    <Container>{children}</Container>\n  </>\n);\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport useSiteMetadata from \"../hooks/useSiteMetadata\";\n\nexport default ({ pageTitle, pageDescription, pagePath }) => {\n  const metadata = useSiteMetadata();\n\n  const title = pageTitle ? `${pageTitle} | ${metadata.title}` : metadata.title;\n\n  const canonicalUrl = metadata.siteUrl + pagePath;\n\n  const description = pageDescription || metadata.description;\n\n  const language = \"en\";\n\n  const websiteJsonLd = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebSite\",\n    inLanguage: language,\n    description: metadata.description,\n    name: metadata.title,\n    url: metadata.siteUrl\n  };\n\n  const webpageJsonLd = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    inLanguage: language,\n    url: canonicalUrl,\n    name: pageTitle,\n    description: description\n  };\n\n  return (\n    <Helmet>\n      <html lang={language} prefix=\"og: http://ogp.me/ns#\" />\n      <meta property=\"og:url\" content={canonicalUrl} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:title\" content={pageTitle || metadata.title} />\n      <meta property=\"og:site_name\" content={metadata.title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:locale\" description={language} />\n      {/* <meta property=\"og:image\" content={shareImageUrl} /> */}\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      {/* <meta name=\"twitter:image\" content={shareImageUrl} /> */}\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <link rel=\"canonical\" href={canonicalUrl} />\n      <meta\n        name=\"google-site-verification\"\n        content=\"7plJI9PIjUYQfvMz5-tplgZZ5kEGyE7zxOK5kps1CXM\"\n      />\n      <script type=\"application/ld+json\">\n        {JSON.stringify([websiteJsonLd, webpageJsonLd])}\n      </script>\n    </Helmet>\n  );\n};\n"],"sourceRoot":""}