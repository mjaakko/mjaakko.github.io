{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/hooks/useSiteMetadata.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/MenuLink.js","webpack:///./src/utils/typography.js","webpack:///./src/hooks/useMenuItems.js","webpack:///./src/components/DesktopMenu.js","webpack:///./src/components/MobileMenu.js","webpack:///./src/components/MenuButton.js","webpack:///./src/components/Header.js","webpack:///./src/components/layout.js","webpack:///./src/components/SEO.js","webpack:///./src/components/BreadcrumbList.js"],"names":["__webpack_exports__","_ref","data","props","_objectWithoutPropertiesLoose","pages","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","Fragment","_components_SEO__WEBPACK_IMPORTED_MODULE_7__","pagePath","location","pathname","pageTitle","_components_BreadcrumbList__WEBPACK_IMPORTED_MODULE_8__","breadcrumbs","name","path","_components_layout__WEBPACK_IMPORTED_MODULE_6__","map","_ref2","page","node","key","fields","slug","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","frontmatter","title","pageQuery","_public_static_d_991291470_json__WEBPACK_IMPORTED_MODULE_0__","site","siteMetadata","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","options","Typography","judahTheme","MenuLink","styled","Link","withConfig","displayName","componentId","headerFontFamily","join","components_MenuLink","react_default","useMenuItems","_3761194853","allMenuItemsYaml","nodes","DesktopMenu","nav","components_DesktopMenu","menuItems","menuItem","MobileMenu","open","components_MobileMenu","MenuButtonBar","span","color","MenuButton","button","size","Header","header","HeaderContainer","div","HeaderTitle","h1","MobileMenuButton","className","onChange","_useState","useState","setOpen","onClick","components_Header","mobileMenuOpen","setMobileMenuOpen","useSiteMetadata","headerColor","gatsby_browser_entry","style","menu","Container","main","children","react_helmet__WEBPACK_IMPORTED_MODULE_1__","_hooks_useSiteMetadata__WEBPACK_IMPORTED_MODULE_2__","pageDescription","metadata","canonicalUrl","siteUrl","description","websiteJsonLd","@context","@type","inLanguage","url","webpageJsonLd","lang","prefix","property","content","rel","href","type","JSON","stringify","breadcrumbList","itemListElement","position","item","concat","_toConsumableArray","breadcrumb","index","react__WEBPACK_IMPORTED_MODULE_8___default","react_helmet__WEBPACK_IMPORTED_MODULE_9__"],"mappings":"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","file":"component---src-pages-projects-js-7307c084c80f3761ab4a.js","sourcesContent":["import React from \"react\";\n\nimport { Link, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/SEO\";\nimport BreadcrumbList from \"../components/BreadcrumbList\";\n\nexport default ({ data, ...props }) => {\n  const pages = data.allMarkdownRemark.edges;\n\n  return (\n    <>\n      <SEO pagePath={props.location.pathname} pageTitle=\"Projects\" />\n      <BreadcrumbList\n        breadcrumbs={[{ name: \"Projects\", path: \"/projects/\" }]}\n      />\n      <Layout>\n        <h1>Projects</h1>\n        <ul>\n          {pages.map(({ node: page }) => (\n            <li key={page.fields.slug}>\n              <Link to={page.fields.slug}>{page.frontmatter.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </Layout>\n    </>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { fields: { slug: { regex: \"/projects/\" } } }\n      sort: { fields: frontmatter___order, order: ASC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n          excerpt(pruneLength: 150, format: PLAIN)\n        }\n      }\n    }\n  }\n`;\n","import { useStaticQuery, graphql } from \"gatsby\";\n\nexport default () => {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          siteUrl\n          title\n          description\n          headerColor\n        }\n      }\n    }\n  `);\n\n  return site.siteMetadata;\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nimport typography from \"../utils/typography\";\n\nconst { options } = typography;\n\nconst MenuLink = styled(Link)`\n  display: inline-block;\n  color: white;\n  font-weight: bold;\n  font-family: ${options.headerFontFamily.join()};\n  margin: 0 0.5rem;\n  transition: all 0.3s ease-in-out 0s;\n\n  &:hover {\n    color: white;\n    text-decoration: underline;\n  }\n\n  @media (min-width: 800px) {\n    &:hover {\n      text-decoration: none;\n      transform: rotate(10deg);\n    }\n  }\n`;\n\nexport default ({ title, path }) => <MenuLink to={path}>{title}</MenuLink>;\n","import Typography from \"typography\";\nimport judahTheme from \"typography-theme-judah\";\n\nconst typography = new Typography(judahTheme);\n\nexport default typography;\n","import { useStaticQuery, graphql } from \"gatsby\";\n\nexport default () => {\n  const { allMenuItemsYaml } = useStaticQuery(graphql`\n    query {\n      allMenuItemsYaml {\n        nodes {\n          path\n          title\n        }\n      }\n    }\n  `);\n\n  return allMenuItemsYaml.nodes;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport MenuLink from \"./MenuLink\";\n\nimport useMenuItems from \"../hooks/useMenuItems\";\n\nconst DesktopMenu = styled.nav`\n  display: none;\n\n  @media (min-width: 800px) {\n    display: inline;\n  }\n`;\n\nexport default () => {\n  const menuItems = useMenuItems();\n\n  return (\n    <DesktopMenu>\n      {menuItems.map(menuItem => (\n        <MenuLink\n          key={menuItem.path}\n          path={menuItem.path}\n          title={menuItem.title}\n        />\n      ))}\n    </DesktopMenu>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport MenuLink from \"./MenuLink\";\n\nimport useMenuItems from \"../hooks/useMenuItems\";\n\nconst MobileMenu = styled.nav`\n  display: ${props => (props.open ? \"flex\" : \"none\")};\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n\n  @media (min-width: 800px) {\n    display: none;\n  }\n`;\n\nexport default ({ open }) => {\n  const menuItems = useMenuItems();\n\n  return (\n    <MobileMenu open={open}>\n      {menuItems.map(menuItem => (\n        <MenuLink\n          key={menuItem.path}\n          path={menuItem.path}\n          title={menuItem.title}\n        />\n      ))}\n    </MobileMenu>\n  );\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst MenuButtonBar = styled.span`\n  display: block;\n  background-color: ${props => props.color || \"white\"};\n  border-radius: 3px;\n  height: 5px;\n`;\n\nconst MenuButton = styled.button`\n  width: ${props => props.size};\n  height: ${props => props.size};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: stretch;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n  padding 0\n`;\n\nexport default ({ className, color, size, onChange }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <MenuButton\n      className={className}\n      size={size}\n      onClick={() => {\n        onChange(!open);\n        setOpen(!open);\n      }}\n    >\n      <MenuButtonBar color={color} />\n      <MenuButtonBar color={color} />\n      <MenuButtonBar color={color} />\n    </MenuButton>\n  );\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nimport DesktopMenu from \"./DesktopMenu\";\nimport MobileMenu from \"./MobileMenu\";\nimport MenuButton from \"./MenuButton\";\n\nimport useSiteMetadata from \"../hooks/useSiteMetadata\";\n\nconst Header = styled.header`\n  background-color: ${props => props.color};\n  width: 100%;\n  padding: 1rem 1rem;\n  margin-bottom: 1rem;\n  box-shadow: 0 1px 4px 4px gray;\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 100%;\n  margin: 0 auto;\n\n  @media (min-width: 800px) {\n    max-width: 1350px;\n  }\n`;\n\nconst HeaderTitle = styled.h1`\n  display: inline;\n  flex-grow: 1;\n  margin: 0;\n`;\n\nconst MobileMenuButton = styled(MenuButton)`\n  @media (min-width: 800px) {\n    display: none;\n  }\n`;\n\nexport default () => {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const siteMetadata = useSiteMetadata();\n\n  return (\n    <Header color={siteMetadata.headerColor}>\n      <HeaderContainer>\n        <HeaderTitle>\n          <Link to=\"/\" style={{ color: \"white\" }}>\n            {siteMetadata.title}\n          </Link>\n        </HeaderTitle>\n        <DesktopMenu menu={siteMetadata.menu} />\n        <MobileMenuButton size=\"50px\" onChange={setMobileMenuOpen} />\n      </HeaderContainer>\n      <MobileMenu menu={siteMetadata.menu} open={mobileMenuOpen} />\n    </Header>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Header from \"./Header\";\n\nconst Container = styled.main`\n  margin: 0 auto;\n  max-width: 1000px;\n  padding: 0 2rem;\n`;\n\nexport default ({ children }) => (\n  <>\n    <Header />\n    <Container>{children}</Container>\n  </>\n);\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport useSiteMetadata from \"../hooks/useSiteMetadata\";\n\nexport default ({ pageTitle, pageDescription, pagePath }) => {\n  const metadata = useSiteMetadata();\n\n  const title = pageTitle ? `${pageTitle} | ${metadata.title}` : metadata.title;\n\n  const canonicalUrl = metadata.siteUrl + pagePath;\n\n  const description = pageDescription || metadata.description;\n\n  const language = \"en\";\n\n  const websiteJsonLd = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebSite\",\n    inLanguage: language,\n    description: metadata.description,\n    name: metadata.title,\n    url: metadata.siteUrl\n  };\n\n  const webpageJsonLd = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    inLanguage: language,\n    url: canonicalUrl,\n    name: pageTitle,\n    description: description\n  };\n\n  return (\n    <Helmet>\n      <html lang={language} prefix=\"og: http://ogp.me/ns#\" />\n      <meta property=\"og:url\" content={canonicalUrl} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:title\" content={pageTitle || metadata.title} />\n      <meta property=\"og:site_name\" content={metadata.title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:locale\" description={language} />\n      {/* <meta property=\"og:image\" content={shareImageUrl} /> */}\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      {/* <meta name=\"twitter:image\" content={shareImageUrl} /> */}\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <link rel=\"canonical\" href={canonicalUrl} />\n      <meta\n        name=\"google-site-verification\"\n        content=\"7plJI9PIjUYQfvMz5-tplgZZ5kEGyE7zxOK5kps1CXM\"\n      />\n      <script type=\"application/ld+json\">\n        {JSON.stringify([websiteJsonLd, webpageJsonLd])}\n      </script>\n    </Helmet>\n  );\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport useSiteMetadata from \"../hooks/useSiteMetadata\";\n\nexport default ({ breadcrumbs }) => {\n  const metadata = useSiteMetadata();\n  const breadcrumbList = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    itemListElement: [\n      {\n        \"@type\": \"ListItem\",\n        position: 1,\n        name: metadata.title,\n        item: metadata.siteUrl\n      },\n      ...breadcrumbs.map((breadcrumb, index) => {\n        return {\n          \"@type\": \"ListItem\",\n          position: index + 2,\n          name: breadcrumb.name,\n          item: metadata.siteUrl + breadcrumb.path\n        };\n      })\n    ]\n  };\n\n  return (\n    <Helmet>\n      <script type=\"application/ld+json\">\n        {JSON.stringify(breadcrumbList)}\n      </script>\n    </Helmet>\n  );\n};\n"],"sourceRoot":""}