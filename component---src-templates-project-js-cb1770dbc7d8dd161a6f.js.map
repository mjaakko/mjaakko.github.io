{"version":3,"sources":["webpack:///./src/templates/project.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/hooks/useSiteMetadata.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/MenuButton.js","webpack:///./src/components/Header.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./src/components/SEO.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_SEO__WEBPACK_IMPORTED_MODULE_2__","_ref","data","pageContext","page","markdownRemark","a","createElement","Fragment","pageTitle","frontmatter","title","pageDescription","excerpt","pagePath","slug","dangerouslySetInnerHTML","__html","html","m","module","exports","require","default","_public_static_d_2635859905_json__WEBPACK_IMPORTED_MODULE_0__","site","siteMetadata","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","MenuButtonBar","styled","span","withConfig","displayName","componentId","props","color","MenuButton","button","size","options","Typography","judahTheme","MenuLink","Link","headerFontFamily","join","MenuItem","memo","path","react_default","to","MobileMenuNav","nav","open","MobileMenu","_ref2","menu","map","menuItem","key","DesktopMenuNav","DesktopMenu","_ref3","Header","header","HeaderContainer","div","HeaderTitle","h1","MobileMenuButton","className","onChange","_useState","useState","setOpen","onClick","components_Header","mobileMenuOpen","setMobileMenuOpen","useSiteMetadata","headerColor","gatsby_browser_entry","style","Header_DesktopMenu","Header_MobileMenu","Container","main","children","react_helmet__WEBPACK_IMPORTED_MODULE_1__","_hooks_useSiteMetadata__WEBPACK_IMPORTED_MODULE_2__","metadata","canonicalUrl","siteUrl","description","websiteJsonLd","@context","@type","inLanguage","name","url","webpageJsonLd","lang","prefix","property","content","rel","href","type","JSON","stringify"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAMeE,EAAA,iBAAAQ,GAA2B,IAAxBC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,YAChBC,EAAOF,EAAKG,eAClB,OACER,EAAAS,EAAAC,cAAAV,EAAAS,EAAAE,SAAA,KACEX,EAAAS,EAAAC,cAACP,EAAA,EAAD,CACES,UAAWL,EAAKM,YAAYC,MAC5BC,gBAAiBR,EAAKS,QACtBC,SAAUX,EAAYY,OAExBlB,EAAAS,EAAAC,cAACR,EAAA,EAAD,KACEF,EAAAS,EAAAC,cAAA,UAAKH,EAAKM,YAAYC,OACtBd,EAAAS,EAAAC,cAAA,OAAKS,wBAAyB,CAAEC,OAAQb,EAAKc,WAM9C,IAAMvB,EAAK,iCCvBlB,IAAsBwB,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,iDCEhC1B,EAAA,aAkBb,OAlBmB+B,EAAAtB,KACXuB,KAiBIC,gDCpBd,IAAA9B,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAA+B,EAAApC,EAAA,GAAAqC,EAAArC,EAAAO,EAAA6B,GAAAE,EAAAtC,EAAA,IAAAuC,EAAAvC,EAAAO,EAAA+B,GAAAtC,EAAAG,EAAAD,EAAA,sBAAAqC,EAAAxB,IAAAf,EAAA,KAa2BwC,IAAMC,cAAc,IAuDvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,gGClEhBC,EAAmB,SAAArC,GAAiC,IAA9BsC,EAA8BtC,EAA9BsC,SAAUC,EAAoBvC,EAApBuC,cACpC,OAAKA,EAGET,IAAMxB,cAAckC,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXN,EAAiBO,UAAY,CAC3BN,SAAUN,IAAUa,MAAM,CACxBC,SAAUd,IAAUE,OAAOC,aAC1BA,YAGUE,oVCnBTU,EAAgBC,IAAOC,KAAVC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,YAAGJ,CAAH,qEAEG,SAAAK,GAAK,OAAIA,EAAMC,OAAS,UAKxCC,EAAaP,IAAOQ,OAAVN,WAAA,CAAAC,YAAA,aAAAC,YAAA,YAAGJ,CAAH,2LACL,SAAAK,GAAK,OAAIA,EAAMI,MACd,SAAAJ,GAAK,OAAIA,EAAMI,oDCFnBC,ECPW,IAAIC,IAAWC,KDO1BF,QAEFG,EAAWb,YAAOc,KAAVZ,WAAA,CAAAC,YAAA,mBAAAC,YAAA,YAAGJ,CAAH,yPAIGU,EAAQK,iBAAiBC,QAiBpCC,EAAWnC,IAAMoC,KAAK,SAAAlE,GAAA,IAAGU,EAAHV,EAAGU,MAAOyD,EAAVnE,EAAUmE,KAAV,OAC1BC,EAAA/D,EAAAC,cAACuD,EAAD,CAAUQ,GAAIF,GAAOzD,KAGjB4D,EAAgBtB,IAAOuB,IAAVrB,WAAA,CAAAC,YAAA,wBAAAC,YAAA,YAAGJ,CAAH,8HACN,SAAAK,GAAK,OAAKA,EAAMmB,KAAO,OAAS,SAUvCC,EAAa,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMH,EAATE,EAASF,KAAT,OACjBJ,EAAA/D,EAAAC,cAACgE,EAAD,CAAeE,KAAMA,GAClBG,EAAKC,IAAI,SAAAC,GAAQ,OAChBT,EAAA/D,EAAAC,cAAC2D,EAAD,CACEa,IAAKD,EAASV,KACdA,KAAMU,EAASV,KACfzD,MAAOmE,EAASnE,YAMlBqE,EAAiB/B,IAAOuB,IAAVrB,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,4DAQdgC,EAAc,SAAAC,GAAA,IAAGN,EAAHM,EAAGN,KAAH,OAClBP,EAAA/D,EAAAC,cAACyE,EAAD,KACGJ,EAAKC,IAAI,SAAAC,GAAQ,OAChBT,EAAA/D,EAAAC,cAAC2D,EAAD,CACEa,IAAKD,EAASV,KACdA,KAAMU,EAASV,KACfzD,MAAOmE,EAASnE,YAMlBwE,EAASlC,IAAOmC,OAAVjC,WAAA,CAAAC,YAAA,SAAAC,YAAA,YAAGJ,CAAH,wGACU,SAAAK,GAAK,OAAIA,EAAMC,QAO/B8B,EAAkBpC,IAAOqC,IAAVnC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,YAAGJ,CAAH,+IAafsC,EAActC,IAAOuC,GAAVrC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGJ,CAAH,0CAMXwC,EAAmBxC,YDnFV,SAAAhD,GAA0C,IAAvCyF,EAAuCzF,EAAvCyF,UAAWnC,EAA4BtD,EAA5BsD,MAAOG,EAAqBzD,EAArByD,KAAMiC,EAAe1F,EAAf0F,SAAeC,EAC/BC,oBAAS,GAA1BpB,EADgDmB,EAAA,GAC1CE,EAD0CF,EAAA,GAGvD,OACEvB,EAAA/D,EAAAC,cAACiD,EAAD,CACEkC,UAAWA,EACXhC,KAAMA,EACNqC,QAAS,WACPJ,GAAUlB,GACVqB,GAASrB,KAGXJ,EAAA/D,EAAAC,cAACyC,EAAD,CAAeO,MAAOA,IACtBc,EAAA/D,EAAAC,cAACyC,EAAD,CAAeO,MAAOA,IACtBc,EAAA/D,EAAAC,cAACyC,EAAD,CAAeO,MAAOA,OCqENJ,WAAA,CAAAC,YAAA,2BAAAC,YAAA,YAAGJ,CAAH,6CAMP+C,EAAA,WAAM,IAAAJ,EACyBC,oBAAS,GAA9CI,EADYL,EAAA,GACIM,EADJN,EAAA,GAEblE,EAAeyE,cAErB,OACE9B,EAAA/D,EAAAC,cAAC4E,EAAD,CAAQ5B,MAAO7B,EAAa0E,aAC1B/B,EAAA/D,EAAAC,cAAC8E,EAAD,KACEhB,EAAA/D,EAAAC,cAACgF,EAAD,KACElB,EAAA/D,EAAAC,cAAC8F,EAAA,EAAD,CAAM/B,GAAG,IAAIgC,MAAO,CAAE/C,MAAO,UAC1B7B,EAAaf,QAGlB0D,EAAA/D,EAAAC,cAACgG,EAAD,CAAa3B,KAAMlD,EAAakD,OAChCP,EAAA/D,EAAAC,cAACkF,EAAD,CAAkB/B,KAAK,OAAOiC,SAAUO,KAE1C7B,EAAA/D,EAAAC,cAACiG,EAAD,CAAY5B,KAAMlD,EAAakD,KAAMH,KAAMwB,ME3H3CQ,EAAYxD,IAAOyD,KAAVvD,WAAA,CAAAC,YAAA,oBAAAC,YAAA,YAAGJ,CAAH,oDAMAxD,EAAA,WAAAQ,GAAA,IAAG0G,EAAH1G,EAAG0G,SAAH,OACbtC,EAAA/D,EAAAC,cAAA8D,EAAA/D,EAAAE,SAAA,KACE6D,EAAA/D,EAAAC,cAACyF,EAAD,MACA3B,EAAA/D,EAAAC,cAACkG,EAAD,KAAYE,uCCdhB,IAAA/G,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAgH,EAAArH,EAAA,KAAAsH,EAAAtH,EAAA,KAKeE,EAAA,WAAAQ,GAA8C,IAA3CQ,EAA2CR,EAA3CQ,UAAWG,EAAgCX,EAAhCW,gBAAiBE,EAAeb,EAAfa,SACtCgG,EAAWX,cAEXxF,EAAQF,EAAeA,EAAN,MAAqBqG,EAASnG,MAAUmG,EAASnG,MAElEoG,EAAeD,EAASE,QAAUlG,EAElCmG,EAAcrG,GAAmBkG,EAASG,YAI1CC,EAAgB,CACpBC,WAAY,qBACZC,QAAS,UACTC,WALe,KAMfJ,YAAaH,EAASG,YACtBK,KAAMR,EAASnG,MACf4G,IAAKT,EAASE,SAGVQ,EAAgB,CACpBL,WAAY,qBACZC,QAAS,UACTC,WAde,KAefE,IAAKR,EACLO,KAAM7G,EACNwG,YAAaA,GAGf,OACEpH,EAAAS,EAAAC,cAACqG,EAAA,OAAD,KACE/G,EAAAS,EAAAC,cAAA,QAAMkH,KAtBO,KAsBSC,OAAO,0BAC7B7H,EAAAS,EAAAC,cAAA,QAAMoH,SAAS,SAASC,QAASb,IACjClH,EAAAS,EAAAC,cAAA,QAAMoH,SAAS,UAAUC,QAAQ,YACjC/H,EAAAS,EAAAC,cAAA,QAAMoH,SAAS,WAAWC,QAASnH,IACnCZ,EAAAS,EAAAC,cAAA,QAAMoH,SAAS,eAAeC,QAASd,EAASnG,QAChDd,EAAAS,EAAAC,cAAA,QAAMoH,SAAS,iBAAiBC,QAASX,IACzCpH,EAAAS,EAAAC,cAAA,QAAMoH,SAAS,YAAYV,YA5Bd,OA8BbpH,EAAAS,EAAAC,cAAA,QAAM+G,KAAK,eAAeM,QAAQ,YAClC/H,EAAAS,EAAAC,cAAA,QAAM+G,KAAK,gBAAgBM,QAASjH,IACpCd,EAAAS,EAAAC,cAAA,QAAM+G,KAAK,sBAAsBM,QAASX,IAE1CpH,EAAAS,EAAAC,cAAA,aAAQI,GACRd,EAAAS,EAAAC,cAAA,QAAM+G,KAAK,cAAcM,QAASX,IAClCpH,EAAAS,EAAAC,cAAA,QAAMsH,IAAI,YAAYC,KAAMf,IAC5BlH,EAAAS,EAAAC,cAAA,QACE+G,KAAK,2BACLM,QAAQ,gDAEV/H,EAAAS,EAAAC,cAAA,UAAQwH,KAAK,uBACVC,KAAKC,UAAU,CAACf,EAAeM","file":"component---src-templates-project-js-cb1770dbc7d8dd161a6f.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/SEO\";\n\nexport default ({ data, pageContext }) => {\n  const page = data.markdownRemark;\n  return (\n    <>\n      <SEO\n        pageTitle={page.frontmatter.title}\n        pageDescription={page.excerpt}\n        pagePath={pageContext.slug}\n      />\n      <Layout>\n        <h1>{page.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: page.html }} />\n      </Layout>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n      excerpt(pruneLength: 200, format: PLAIN)\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { useStaticQuery, graphql } from \"gatsby\";\n\nexport default () => {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          siteUrl\n          title\n          description\n          headerColor\n          menu {\n            path\n            title\n          }\n        }\n      }\n    }\n  `);\n\n  return site.siteMetadata;\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst MenuButtonBar = styled.span`\n  display: block;\n  background-color: ${props => props.color || \"white\"};\n  border-radius: 3px;\n  height: 5px;\n`;\n\nconst MenuButton = styled.button`\n  width: ${props => props.size};\n  height: ${props => props.size};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: stretch;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n  padding 0\n`;\n\nexport default ({ className, color, size, onChange }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <MenuButton\n      className={className}\n      size={size}\n      onClick={() => {\n        onChange(!open);\n        setOpen(!open);\n      }}\n    >\n      <MenuButtonBar color={color} />\n      <MenuButtonBar color={color} />\n      <MenuButtonBar color={color} />\n    </MenuButton>\n  );\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nimport MenuButton from \"./MenuButton\";\n\nimport useSiteMetadata from \"../hooks/useSiteMetadata\";\n\nimport typography from \"../utils/typography\";\n\nconst { options } = typography;\n\nconst MenuLink = styled(Link)`\n  display: inline-block;\n  color: white;\n  font-weight: bold;\n  font-family: ${options.headerFontFamily.join()};\n  margin: 0 0.5rem;\n  transition: all 0.3s ease-in-out 0s;\n\n  &:hover {\n    color: white;\n    text-decoration: underline;\n  }\n\n  @media (min-width: 800px) {\n    &:hover {\n      text-decoration: none;\n      transform: rotate(10deg);\n    }\n  }\n`;\n\nconst MenuItem = React.memo(({ title, path }) => (\n  <MenuLink to={path}>{title}</MenuLink>\n));\n\nconst MobileMenuNav = styled.nav`\n  display: ${props => (props.open ? \"flex\" : \"none\")};\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n\n  @media (min-width: 800px) {\n    display: none;\n  }\n`;\n\nconst MobileMenu = ({ menu, open }) => (\n  <MobileMenuNav open={open}>\n    {menu.map(menuItem => (\n      <MenuItem\n        key={menuItem.path}\n        path={menuItem.path}\n        title={menuItem.title}\n      />\n    ))}\n  </MobileMenuNav>\n);\n\nconst DesktopMenuNav = styled.nav`\n  display: none;\n\n  @media (min-width: 800px) {\n    display: inline;\n  }\n`;\n\nconst DesktopMenu = ({ menu }) => (\n  <DesktopMenuNav>\n    {menu.map(menuItem => (\n      <MenuItem\n        key={menuItem.path}\n        path={menuItem.path}\n        title={menuItem.title}\n      />\n    ))}\n  </DesktopMenuNav>\n);\n\nconst Header = styled.header`\n  background-color: ${props => props.color};\n  width: 100%;\n  padding: 1rem 1rem;\n  margin-bottom: 1rem;\n  box-shadow: 0 1px 4px 4px gray;\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 100%;\n  margin: 0 auto;\n\n  @media (min-width: 800px) {\n    max-width: 1350px;\n  }\n`;\n\nconst HeaderTitle = styled.h1`\n  display: inline;\n  flex-grow: 1;\n  margin: 0;\n`;\n\nconst MobileMenuButton = styled(MenuButton)`\n  @media (min-width: 800px) {\n    display: none;\n  }\n`;\n\nexport default () => {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const siteMetadata = useSiteMetadata();\n\n  return (\n    <Header color={siteMetadata.headerColor}>\n      <HeaderContainer>\n        <HeaderTitle>\n          <Link to=\"/\" style={{ color: \"white\" }}>\n            {siteMetadata.title}\n          </Link>\n        </HeaderTitle>\n        <DesktopMenu menu={siteMetadata.menu} />\n        <MobileMenuButton size=\"50px\" onChange={setMobileMenuOpen} />\n      </HeaderContainer>\n      <MobileMenu menu={siteMetadata.menu} open={mobileMenuOpen} />\n    </Header>\n  );\n};\n","import Typography from \"typography\";\nimport judahTheme from \"typography-theme-judah\";\n\nconst typography = new Typography(judahTheme);\n\nexport default typography;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Header from \"./Header\";\n\nconst Container = styled.main`\n  margin: 0 auto;\n  max-width: 1000px;\n  padding: 0 2rem;\n`;\n\nexport default ({ children }) => (\n  <>\n    <Header />\n    <Container>{children}</Container>\n  </>\n);\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport useSiteMetadata from \"../hooks/useSiteMetadata\";\n\nexport default ({ pageTitle, pageDescription, pagePath }) => {\n  const metadata = useSiteMetadata();\n\n  const title = pageTitle ? `${pageTitle} | ${metadata.title}` : metadata.title;\n\n  const canonicalUrl = metadata.siteUrl + pagePath;\n\n  const description = pageDescription || metadata.description;\n\n  const language = \"en\";\n\n  const websiteJsonLd = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebSite\",\n    inLanguage: language,\n    description: metadata.description,\n    name: metadata.title,\n    url: metadata.siteUrl\n  };\n\n  const webpageJsonLd = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    inLanguage: language,\n    url: canonicalUrl,\n    name: pageTitle,\n    description: description\n  };\n\n  return (\n    <Helmet>\n      <html lang={language} prefix=\"og: http://ogp.me/ns#\" />\n      <meta property=\"og:url\" content={canonicalUrl} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:title\" content={pageTitle} />\n      <meta property=\"og:site_name\" content={metadata.title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:locale\" description={language} />\n      {/* <meta property=\"og:image\" content={shareImageUrl} /> */}\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      {/* <meta name=\"twitter:image\" content={shareImageUrl} /> */}\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <link rel=\"canonical\" href={canonicalUrl} />\n      <meta\n        name=\"google-site-verification\"\n        content=\"7plJI9PIjUYQfvMz5-tplgZZ5kEGyE7zxOK5kps1CXM\"\n      />\n      <script type=\"application/ld+json\">\n        {JSON.stringify([websiteJsonLd, webpageJsonLd])}\n      </script>\n    </Helmet>\n  );\n};\n"],"sourceRoot":""}