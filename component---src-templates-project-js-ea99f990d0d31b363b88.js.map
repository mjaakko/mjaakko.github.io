{"version":3,"sources":["webpack:///./src/templates/project.js","webpack:///./src/hooks/useSiteMetadata.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/MenuLink.js","webpack:///./src/utils/typography.js","webpack:///./src/hooks/useMenuItems.js","webpack:///./src/components/DesktopMenu.js","webpack:///./src/components/MobileMenu.js","webpack:///./src/components/MenuButton.js","webpack:///./src/components/Header.js","webpack:///./src/components/layout.js","webpack:///./src/components/SEO.js","webpack:///./src/components/BreadcrumbList.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_SEO__WEBPACK_IMPORTED_MODULE_2__","_components_BreadcrumbList__WEBPACK_IMPORTED_MODULE_3__","_ref","data","pageContext","page","markdownRemark","a","createElement","Fragment","pageTitle","frontmatter","title","pageDescription","excerpt","pagePath","slug","breadcrumbs","name","path","dangerouslySetInnerHTML","__html","html","_public_static_d_991291470_json__WEBPACK_IMPORTED_MODULE_0__","site","siteMetadata","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","options","Typography","judahTheme","MenuLink","styled","Link","withConfig","displayName","componentId","headerFontFamily","join","components_MenuLink","react_default","to","useMenuItems","_3761194853","allMenuItemsYaml","nodes","DesktopMenu","nav","components_DesktopMenu","menuItems","map","menuItem","key","MobileMenu","props","open","components_MobileMenu","MenuButtonBar","span","color","MenuButton","button","size","Header","header","HeaderContainer","div","HeaderTitle","h1","MobileMenuButton","className","onChange","_useState","useState","setOpen","onClick","components_Header","mobileMenuOpen","setMobileMenuOpen","useSiteMetadata","headerColor","gatsby_browser_entry","style","menu","Container","main","children","react_helmet__WEBPACK_IMPORTED_MODULE_1__","_hooks_useSiteMetadata__WEBPACK_IMPORTED_MODULE_2__","metadata","canonicalUrl","siteUrl","description","websiteJsonLd","@context","@type","inLanguage","url","webpageJsonLd","lang","prefix","property","content","rel","href","type","JSON","stringify","breadcrumbList","itemListElement","position","item","concat","_toConsumableArray","breadcrumb","index","react__WEBPACK_IMPORTED_MODULE_8___default","react_helmet__WEBPACK_IMPORTED_MODULE_9__"],"mappings":"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","file":"component---src-templates-project-js-ea99f990d0d31b363b88.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/SEO\";\nimport BreadcrumbList from \"../components/BreadcrumbList\";\n\nexport default ({ data, pageContext }) => {\n  const page = data.markdownRemark;\n  return (\n    <>\n      <SEO\n        pageTitle={page.frontmatter.title}\n        pageDescription={page.excerpt}\n        pagePath={pageContext.slug}\n      />\n      <BreadcrumbList\n        breadcrumbs={[\n          { name: \"Projects\", path: \"/projects/\" },\n          { name: page.frontmatter.title, path: pageContext.slug }\n        ]}\n      />\n      <Layout>\n        <h1>{page.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: page.html }} />\n      </Layout>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n      excerpt(pruneLength: 200, format: PLAIN)\n    }\n  }\n`;\n","import { useStaticQuery, graphql } from \"gatsby\";\n\nexport default () => {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          siteUrl\n          title\n          description\n          headerColor\n        }\n      }\n    }\n  `);\n\n  return site.siteMetadata;\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nimport typography from \"../utils/typography\";\n\nconst { options } = typography;\n\nconst MenuLink = styled(Link)`\n  display: inline-block;\n  color: white;\n  font-weight: bold;\n  font-family: ${options.headerFontFamily.join()};\n  margin: 0 0.5rem;\n  transition: all 0.3s ease-in-out 0s;\n\n  &:hover {\n    color: white;\n    text-decoration: underline;\n  }\n\n  @media (min-width: 800px) {\n    &:hover {\n      text-decoration: none;\n      transform: rotate(10deg);\n    }\n  }\n`;\n\nexport default ({ title, path }) => <MenuLink to={path}>{title}</MenuLink>;\n","import Typography from \"typography\";\nimport judahTheme from \"typography-theme-judah\";\n\nconst typography = new Typography(judahTheme);\n\nexport default typography;\n","import { useStaticQuery, graphql } from \"gatsby\";\n\nexport default () => {\n  const { allMenuItemsYaml } = useStaticQuery(graphql`\n    query {\n      allMenuItemsYaml {\n        nodes {\n          path\n          title\n        }\n      }\n    }\n  `);\n\n  return allMenuItemsYaml.nodes;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport MenuLink from \"./MenuLink\";\n\nimport useMenuItems from \"../hooks/useMenuItems\";\n\nconst DesktopMenu = styled.nav`\n  display: none;\n\n  @media (min-width: 800px) {\n    display: inline;\n  }\n`;\n\nexport default () => {\n  const menuItems = useMenuItems();\n\n  return (\n    <DesktopMenu>\n      {menuItems.map(menuItem => (\n        <MenuLink\n          key={menuItem.path}\n          path={menuItem.path}\n          title={menuItem.title}\n        />\n      ))}\n    </DesktopMenu>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport MenuLink from \"./MenuLink\";\n\nimport useMenuItems from \"../hooks/useMenuItems\";\n\nconst MobileMenu = styled.nav`\n  display: ${props => (props.open ? \"flex\" : \"none\")};\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n\n  @media (min-width: 800px) {\n    display: none;\n  }\n`;\n\nexport default ({ open }) => {\n  const menuItems = useMenuItems();\n\n  return (\n    <MobileMenu open={open}>\n      {menuItems.map(menuItem => (\n        <MenuLink\n          key={menuItem.path}\n          path={menuItem.path}\n          title={menuItem.title}\n        />\n      ))}\n    </MobileMenu>\n  );\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst MenuButtonBar = styled.span`\n  display: block;\n  background-color: ${props => props.color || \"white\"};\n  border-radius: 3px;\n  height: 5px;\n`;\n\nconst MenuButton = styled.button`\n  width: ${props => props.size};\n  height: ${props => props.size};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: stretch;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n  padding 0\n`;\n\nexport default ({ className, color, size, onChange }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <MenuButton\n      className={className}\n      size={size}\n      onClick={() => {\n        onChange(!open);\n        setOpen(!open);\n      }}\n    >\n      <MenuButtonBar color={color} />\n      <MenuButtonBar color={color} />\n      <MenuButtonBar color={color} />\n    </MenuButton>\n  );\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nimport DesktopMenu from \"./DesktopMenu\";\nimport MobileMenu from \"./MobileMenu\";\nimport MenuButton from \"./MenuButton\";\n\nimport useSiteMetadata from \"../hooks/useSiteMetadata\";\n\nconst Header = styled.header`\n  background-color: ${props => props.color};\n  width: 100%;\n  padding: 1rem 1rem;\n  margin-bottom: 1rem;\n  box-shadow: 0 1px 4px 4px gray;\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 100%;\n  margin: 0 auto;\n\n  @media (min-width: 800px) {\n    max-width: 1350px;\n  }\n`;\n\nconst HeaderTitle = styled.h1`\n  display: inline;\n  flex-grow: 1;\n  margin: 0;\n`;\n\nconst MobileMenuButton = styled(MenuButton)`\n  @media (min-width: 800px) {\n    display: none;\n  }\n`;\n\nexport default () => {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const siteMetadata = useSiteMetadata();\n\n  return (\n    <Header color={siteMetadata.headerColor}>\n      <HeaderContainer>\n        <HeaderTitle>\n          <Link to=\"/\" style={{ color: \"white\" }}>\n            {siteMetadata.title}\n          </Link>\n        </HeaderTitle>\n        <DesktopMenu menu={siteMetadata.menu} />\n        <MobileMenuButton size=\"50px\" onChange={setMobileMenuOpen} />\n      </HeaderContainer>\n      <MobileMenu menu={siteMetadata.menu} open={mobileMenuOpen} />\n    </Header>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Header from \"./Header\";\n\nconst Container = styled.main`\n  margin: 0 auto;\n  max-width: 1000px;\n  padding: 0 2rem;\n`;\n\nexport default ({ children }) => (\n  <>\n    <Header />\n    <Container>{children}</Container>\n  </>\n);\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport useSiteMetadata from \"../hooks/useSiteMetadata\";\n\nexport default ({ pageTitle, pageDescription, pagePath }) => {\n  const metadata = useSiteMetadata();\n\n  const title = pageTitle ? `${pageTitle} | ${metadata.title}` : metadata.title;\n\n  const canonicalUrl = metadata.siteUrl + pagePath;\n\n  const description = pageDescription || metadata.description;\n\n  const language = \"en\";\n\n  const websiteJsonLd = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebSite\",\n    inLanguage: language,\n    description: metadata.description,\n    name: metadata.title,\n    url: metadata.siteUrl\n  };\n\n  const webpageJsonLd = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    inLanguage: language,\n    url: canonicalUrl,\n    name: pageTitle,\n    description: description\n  };\n\n  return (\n    <Helmet>\n      <html lang={language} prefix=\"og: http://ogp.me/ns#\" />\n      <meta property=\"og:url\" content={canonicalUrl} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:title\" content={pageTitle || metadata.title} />\n      <meta property=\"og:site_name\" content={metadata.title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:locale\" description={language} />\n      {/* <meta property=\"og:image\" content={shareImageUrl} /> */}\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      {/* <meta name=\"twitter:image\" content={shareImageUrl} /> */}\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <link rel=\"canonical\" href={canonicalUrl} />\n      <meta\n        name=\"google-site-verification\"\n        content=\"7plJI9PIjUYQfvMz5-tplgZZ5kEGyE7zxOK5kps1CXM\"\n      />\n      <script type=\"application/ld+json\">\n        {JSON.stringify([websiteJsonLd, webpageJsonLd])}\n      </script>\n    </Helmet>\n  );\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport useSiteMetadata from \"../hooks/useSiteMetadata\";\n\nexport default ({ breadcrumbs }) => {\n  const metadata = useSiteMetadata();\n  const breadcrumbList = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    itemListElement: [\n      {\n        \"@type\": \"ListItem\",\n        position: 1,\n        name: metadata.title,\n        item: metadata.siteUrl\n      },\n      ...breadcrumbs.map((breadcrumb, index) => {\n        return {\n          \"@type\": \"ListItem\",\n          position: index + 2,\n          name: breadcrumb.name,\n          item: metadata.siteUrl + breadcrumb.path\n        };\n      })\n    ]\n  };\n\n  return (\n    <Helmet>\n      <script type=\"application/ld+json\">\n        {JSON.stringify(breadcrumbList)}\n      </script>\n    </Helmet>\n  );\n};\n"],"sourceRoot":""}